###############################################
# General Options
###############################################
# Use zsh as the default shell
set-option -g default-shell /bin/zsh
# Allow xterm titles in terminal window, terminal scrolling with scrollbar
set -g terminal-overrides "xterm*:XT:smcup@:rmcup@"
# Enable 24 Bit true color
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Automatically renumber windows as they are opened and closed
set-option -g renumber-windows on

# make scrollback bigger that default of 2000
set-option -g history-limit 25000

# Remove annoying delay with escape key (crucial for vim)
set -s escape-time 0

set -g set-titles on
set -g set-titles-string "#T"

# Enable names for panes
set -g allow-rename 0
set -g pane-border-status top
set -g pane-border-format "tmux #P: #{pane_current_command}"
set -g automatic-rename-format " #I:#{=30:pane_title}#F "
set -g automatic-rename 1
set -g set-titles on
set -g set-titles-string "#h:#S:#{pane_title} #{session_alerts}"

###############################################
# Key Bindings
###############################################
# Use vi mode keys
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

# set prefix to CTRL-space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# set previous window to N as well as p
bind-key N previous-window

bind-key H select-pane -L \; resize-pane -Z
bind-key J select-pane -D \; resize-pane -Z
bind-key K select-pane -U \; resize-pane -Z
bind-key L select-pane -R \; resize-pane -Z

bind-key Escape copy-mode
bind-key p paste-buffer

# use f-keys to resize sorta like hjkl
bind-key -r F9 resize-pane -L 2
bind-key -r F10 resize-pane -D 2
bind-key -r F11 resize-pane -U 2
bind-key -r F12 resize-pane -R 2

# Allow next/last pane to be repeated
bind-key -r n next-window
bind-key -r N previous-window

# easy way to swap windows
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# move a window to a different session
bind-key @ choose-session "move-window -t '%%':"

# move a pane to a different window
bind-key ` choose-window "move-pane -t '%%'"

# list all sessions
bind-key L choose-tree

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Supposed to be sort of like visual selection mode
bind-key -r v copy-mode

# The following are based from tmux-pain-control
# Manually added to avoid binding conflicts
# Use \ instead of | to avoid pressing shift
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

bind-key -r c-h resize-pane -L 5
bind-key -r c-j resize-pane -D 5
bind-key -r c-k resize-pane -U 5
bind-key -r c-l resize-pane -R 5

# cycle through zoomed panes
bind-key -r Z select-pane -t .+1 \;  resize-pane -Z

###############################################
# Display Options
###############################################
# Source the generated tmuxline.conf file
source-file ~/.tmuxline.conf

set-option -g status-interval 1

###############################################
# Plugins
###############################################
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-copycat        \
  tmux-plugins/tmux-logging        \
  tmux-plugins/tmux-sessionist     \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-open           \
  Korrow/tmux-mouse                \
'

set -g @yank_selection 'clipboard'

if-shell 'grep -q Microsoft "/proc/version"' \
    'set -g @custom_copy_command "win32yank.exe -i"'

# Install Tmux plugin manager if not already installed
if "test ! -f ~/.tmux/plugins/tpm/tpm" \
    "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run '~/.tmux/plugins/tpm/tpm'
