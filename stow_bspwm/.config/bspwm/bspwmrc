#! /bin/sh

bspc_setup_monitors(){
    # Right now lazily just assigns 5 per monitor
    local count=1
    monitors=$(bspc query -M)
    monitor_count=$(echo "$monitors" | wc -l)
    screens_per_monitor=$((10/$monitor_count))
    echo "Found ${monitor_count} monitors, doing ${screens_per_monitor} per monitor"
    echo "$monitors" | while read monitor; do
        echo "Found monitor $monitor"
        monitorstring=""
        screen=0
        until [ $screen -eq $screens_per_monitor ]; do
            # Make sure that only use 1-0, repeating if necessary
            realcount=$((count++))
            if [ $realcount -gt 9 ];then
                realcount=$((realcount % 10))
            fi
            monitorstring="$monitorstring $realcount"
            (( screen++ ))
        done
        echo "bspc monitor ${monitor} -d $monitorstring"
        bspc monitor ${monitor} -d $monitorstring
    done
}

bspc_setup_monitors

# Reclaim any old windows (but lose their positions)
bspc wm --adopt-orphans

# Set up the window padding
bspc config border_width        2
bspc config window_gap          5
bspc config left_padding        0
bspc config right_padding       0
bspc config top_padding         ${BAR_HEIGHT}
bspc config bottom_padding      0

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config single_monocle       true

# Allow focused window to change on click
bspc config click_to_focus       true

# Prevents changing focus with the mouse pointer
bspc config focus_follows_pointer false

# Color scheme configuration
bspc config focused_border_color   "#00afff"

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off

